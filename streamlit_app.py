# -*- coding: utf-8 -*-
"""streamlit_app

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1GECWkHmjft2EoID9U4dLcgJADrWGSfab
"""

import streamlit as st
import pandas as pd
import plotly.express as px
import requests
from bs4 import BeautifulSoup

# Function to scrape GDP data
@st.cache_data
def get_gdp_data(source):
    url = "https://en.wikipedia.org/wiki/List_of_countries_by_GDP_(nominal)"
    response = requests.get(url, headers={'User-Agent': 'Mozilla/5.0'}, timeout=10)
    soup = BeautifulSoup(response.text, 'html.parser')
    tables = soup.find_all('table', {'class': 'wikitable'})

    if len(tables) == 0:
        print("No tables found.")
        return pd.DataFrame()

    table = tables[0]  # Use the only table available

    # Extract column headers
    headers = [th.text.strip() for th in table.find_all('tr')[0].find_all('th')]
    print("Table Headers:", headers)  # Debugging

    # Identify the correct column index for the selected source
    source_mapping = {"IMF": "IMF est.", "UN": "United Nations", "World Bank": "World Bank"}
    
    if source not in source_mapping:
        print(f"Invalid source: {source}")
        return pd.DataFrame()

    try:
        source_col_index = headers.index(source_mapping[source])
    except ValueError:
        print(f"Column for {source} not found.")
        return pd.DataFrame()

    # Extract data
    data = []
    for row in table.find_all('tr')[1:]:  # Skip header row
        cols = row.find_all('td')
        if len(cols) > source_col_index:  # Ensure we have enough columns
            country = cols[0].text.strip()
            gdp = cols[source_col_index].text.strip().replace(',', '')
            try:
                gdp = float(gdp)
            except ValueError:
                continue  # Skip if conversion fails
            data.append({'Country': country, 'GDP': gdp, 'Source': source})

    return pd.DataFrame(data)

# Function to scrape region data (moved outside app_code)
def get_region_data():
    url = 'https://www.ucl.ac.uk/global/regional-activity/countries-and-regions-directory'
    response = requests.get(url)
    soup = BeautifulSoup(response.text, 'html.parser')
    region_tables = soup.find_all('td')

    data = []
    for i in range(0, len(region_tables), 2):
        country = region_tables[i].text.split(";")[0].strip()
        region = region_tables[i + 1].text.strip()
        data.append((country, region))

    return pd.DataFrame(data, columns=["Country", "Region"])

# Streamlit app code as a string
app_code = """
import streamlit as st
import plotly.express as px
import pandas as pd

""" # Define app_code with the Streamlit code as a string

st.title("Global GDP Stacked Bar Chart")

gdp_source = st.selectbox("Select GDP Data Source", ["IMF", "UN", "World Bank"])
df_gdp = get_gdp_data(gdp_source)
df_region = get_region_data()

# Merge data
df = df_gdp.merge(df_region, on="Country", how="left").dropna()

# Create plot
df_sorted = df.sort_values(by=["Region", "GDP"], ascending=[True, False])
fig = px.bar(df_sorted, x="Region", y="GDP", color="Country", title=f"GDP by Country (Source: {gdp_source})", labels={"GDP": "GDP (in USD)"}, height=600)

st.plotly_chart(fig)


# Save the Streamlit app code to a file
with open("app.py", "w") as f:
    f.write(app_code)
